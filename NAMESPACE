# exports for JMDplots package
export(
  # gradox paper 20190928
  "gradox1", "gradox2", "gradoxS1", "gradoxS2", "gradox3", "gradox4", "gradox5",
  # chnszten paper 20190929
  "chnszten1", "chnszten4", "chnszten5", "chnszten6", "chnszten7",
  "chnsztenS1", "chnsztenS2", "chnsztenS3", "chnsztenS4", "chnsztenS5",
  "chnsztenS6A", "chnsztenS6B", "chnsztenS7", "chnsztenS8", "chnsztenS9", "chnsztenS10",
  # gradH2O paper 20190930-20191008
  "gradH2O1", "gradH2O2", "gradH2O3", "gradH2O4", "gradH2O6",
  # 20191104, 20191117
  "gradH2O0", "gradH2O5",
  # grad_mplot 20190930
  "mplot", "mpage", "ppage", "mcomp", "pcomp",
  # Nif-encoding genomes 20191015
  "NifProteomes",
  # aoscp paper 20191018
  "aoscp1", "aoscp2", "aoscp3", "aoscp4", "aoscp5", "aoscp6", "aoscp99",
  "yeast.aa", "yeastgfp", "yeast.ZC",
  # scsc paper 20191019
  "scsc2", "scsc3",
  # aaaq paper 20191020
  "aaaq4", "aaaq10", "aaaq13",
  # utilities 20191027
  "addexif",
  # canH2O paper 20200203-20200204
  "canH2O1", "pdat_HPA", "pdat_TCGA", "canH2O2", "canH2O3", "canH2O4", "canH2O5",
  # canH2O Table 2 20200205
  "canH2OT2",
  # canH2O supplementary tables and figures 20200205
  "canH2OT1", "canH2OT3",
  "canH2OS1", "canH2OS2", "canH2OS3",
  # canH2O paper 20200223, 20200301, 20200409, 20200420
  "pdat_CH16", "canH2OS4", "canH2OS5", "pdat_saltygenes"
)

# imports from CHNOSZ
importFrom("CHNOSZ",
  # first batch: gradox
  "ZC", "affinity", "aminoacids", "as.chemical.formula", 
  "basis", "diagram", "info", "label.figure", "makeup", "mod.obigt",
  "species", "swap.basis", "thermo", "thermo.axis", "today",
  # second batch: chnszten
  "DGtr", "add.obigt", "axis.label", "bgamma", "describe.basis", "describe.property",
  "describe.reaction", "equilibrate", "expr.property", "expr.species", "findit",
  "list2array", "mass", "maxdiff", "mod.buffer", "mosaic",
  "nonideal", "obigt", "ratlab", "reset", "solubility",
  "subcrt", "thermo.plot.new", "water",
  # third batch: gradH2O
  "protein.formula",
  # fourth batch: aoscp
  "nucleic.formula", "convert", "protein.length", "read.fasta",
  # fifth batch: scsc
  "aasum", "add.protein", "label.plot",
  # sixth batch: aaaq
  "water.lines", "pinfo", "ionize.aa"
)

# imports from canprot
importFrom("canprot",
  # first batch: gradH2O1 20190930
  "canprot",
  # second batch: gradH2O6 20191008
  "diffplot", "get_comptab", "pdat_osmotic_bact",
  # moved to canprot 20191027
  "ZCAA", "H2OAA", "GRAVY", "pI",
  # new protein expression data 20191104
  "pdat_osmotic_halo",
  # for pdat_HPA() and pdat_TCGA() 20200204
  "cleanup", "protcomp",
  # for plotphylo() 20200204
  "check_IDs",
  # for canH2OT3() 20200205
  "O2AA",
  # for pdat_saltygenes() 20200421
  "pdat_osmotic_euk"
)

# imports from other packages
importFrom("shiny", "fluidPage", "includeCSS", "shinyApp")
importFrom("timevis", "renderTimevis", "timevis", "timevisOutput")
importFrom("png", "readPNG")
importFrom("plotrix", "draw.arc")
importFrom("MASS", "kde2d")
importFrom("diagram", "openplotmat", "coordinates", "straightarrow", "curvedarrow", "textrect", "textplain")
importFrom("ggplot2", "theme_bw", "xlab", "ylab", "geom_hline", "geom_vline", "theme",
           "element_text", "ggplot", "aes", "geom_point", "ggtitle", "labs", "xlim", "ylim",
           "theme_void", "geom_text", "annotate", "unit",
           "ggplot_gtable", "ggplot_build", "theme_classic", "element_rect", "ggsave",
           "geom_smooth", "geom_contour")

# imports from standard packages
importFrom("grDevices", "dev.off", "cairo_pdf", "pdf", "blues9", "colorRampPalette",
           "chull", "col2rgb", "rgb", "colorRamp", "heat.colors", "topo.colors")
importFrom("graphics", "abline", "arrows", "axis", "box", "layout",
           "legend", "lines", "mtext", "par", "plot", "plot.new",
           "points", "rect", "text", "title", "smoothScatter", "strheight",
           "polygon", "hist", "plot.window", "rasterImage")
importFrom("stats", "lm", "na.omit", "predict", "sd", "predict.lm", "residuals",
           "qqline", "qqnorm", "quantile", "median", "fivenum",
           "density", "formula", "t.test", "approx")
importFrom("utils", "read.csv", "demo", "packageVersion", "tail", "write.csv", "capture.output")

